---

# MySQL
- name: Install MySQL server, pymysql and pip
  apt:
    name: 
      - mysql-server
      - python3-pymysql
      - python3-pip
    state: present

- name: Install Flask for Python3
  pip:
    name: 
      - flask
      - flask_sqlalchemy
    executable: pip3
  become: true

- name: Ensure MySQL service is enabled and running
  service: 
    name: mysql
    state: started
    enabled: true

- name: Override MySQL configuration file
  template:
    src: override.cnf.j2
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify: Restart MySQL

- name: Create MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
     - Reset MySQL source
     - Reset MySQL replica

- name: MySQL user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    priv: "{{ mysql_database }}.*:ALL"
    host: "%"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

# MySQL replica
- name: MySQL replication user
  community.mysql.mysql_user:
     name: "{{ mysql_replica_user }}"
     password: "{{ mysql_replica_password }}"
     priv: "*.*:REPLICATION SLAVE"
     host: "%"
     login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Set up a MySQL replica server to a read-only mode
  community.mysql.mysql_variables:
     variable: read_only
     value: "{{ 'OFF' if inventory_hostname == mysql_host else 'ON' }}"
     mode: persist
     login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
     - Reset MySQL source
     - Reset MySQL replica


# MySQL exporter
- name: Install MySQL exporter
  apt:
    name: prometheus-mysqld-exporter
    state: present

- name: Create MySQL user for exporter
  community.mysql.mysql_user:
    name: "{{ mysql_exporter_user }}"
    password: "{{ mysql_exporter_password }}"
    priv: '*.*:PROCESS,REPLICATION CLIENT,SELECT'
    host: '%'
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Create .my.cnf file
  template:
    src: my.cnf.j2
    dest: "/var/lib/prometheus/.my.cnf"
    owner: prometheus
    group: prometheus
    mode: '0600'
  notify: 
    - Daemon reload
    - Restart MySQL exporter
  no_log: true

- name: Create prometheus-mysqld-exporter file
  template:
    src: prometheus-mysqld-exporter.j2
    dest: /etc/default/prometheus-mysqld-exporter
  notify: Restart MySQL exporter

- name: flush
  meta: flush_handlers

- name: Ensure MySQL exporter service is started and enabled
  systemd:
    name: prometheus-mysqld-exporter
    state: started
    enabled: yes
  notify: Restart MySQL exporter

# Backup
- name: Create mysql directory, created and owned by backup
  file:
    path: /home/backup/mysql
    state: directory
    owner: '{{ backup_user }}'
    group: '{{ backup_user }}'
    mode: '0744'

- name: Create MySQL user backup with LOCK TABLES, SELECT privileges on agama database
  mysql_user:
    name: '{{ backup_user }}'
    host: "%"
    password: "{{ mysql_backup_user_password }}"
    priv: "{{ mysql_database }}.*:LOCK TABLES,SELECT"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Create .my.cnf file for user 'backup'
  template:
    src: my_backup.cnf.j2
    dest: /home/backup/.my.cnf
    owner: '{{ backup_user }}'
    group: '{{ backup_user }}'
    mode: '700'
  no_log: true

- name: Add a MySQL cron tab file
  template:
    src: mysql-backup
    dest: /etc/cron.d/mysql-backup
