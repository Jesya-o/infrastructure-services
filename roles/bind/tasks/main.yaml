---
# Installation
- name: Install Bind9 package
  apt: 
    name:
      - bind9
      - python3-dnspython

- name: Ensure Bind9 is enabled and running
  systemd:
    name: bind9
    enabled: true
    state: started

# Configuring DNS zone
- name: DNS config, options
  template:
    src: named.conf.options.j2
    dest: /etc/bind/named.conf.options
  notify: Restart Bind9 service

- name: DNS config, local
  template:
    src: named.conf.local.j2
    dest: /etc/bind/named.conf.local
  notify: Restart Bind9 service

# Add directory for zone file
- name: Create directory for zone file
  file:
    path: "{{ zone_dir }}"
    state: directory
    owner: bind
    group: bind
  notify: Restart Bind9 service

- name: Place zone file
  template:
    dest: '{{ zone_file_path }}'
    src: master_zone.j2
    force: no
    owner: bind
    group: bind
  notify: Restart Bind9 service
  when: inventory_hostname in groups['dns_primaries']

- name: Place reverse zone file
  template:
    dest: '{{ zone_dir }}/db.rev'
    src: reverse_zone.j2
    # force: no
    owner: bind
    group: bind
  notify: Restart Bind9 service
  when: inventory_hostname in groups['dns_primaries']

- name: Flush handlers
  meta: flush_handlers

# # Rewrite Bind role
# - name: Check if zone file exists
#   stat:
#     path: "{{ zone_file_path }}"
#   register: zone_file_exists

# - name: Generate and copy master zone file
#   template:
#     src: master_zone.j2
#     dest: "{{ zone_file_path }}"
#     owner: bind
#     group: bind
#   notify: Restart Bind9 service
#   when: inventory_hostname in groups['dns_primaries'] and not zone_file_exists.stat.exists

# Add records
- name: Add A records
  nsupdate:
     key_name: "nsupdate.key"
     key_secret: "{{ nsupdate_key }}"
     key_algorithm: "hmac-sha256"
     server: "localhost"
     zone: "{{ startup_name }}."
     record: "{{ item.key }}.{{ startup_name }}."
     value: "{{ item.value }}"
     type: "A"
  loop: "{{ a_records | dict2items }}"
  when: inventory_hostname in groups['dns_primaries']
  # no_log: true

- name: Add CNAME records
  nsupdate:
     key_name: "nsupdate.key"
     key_secret: "{{ nsupdate_key }}"
     key_algorithm: "hmac-sha256"
     server: "localhost"
     zone: "{{ startup_name }}."
     record: "{{ item.key }}.{{ startup_name }}."
     value: "{{ item.value }}.{{ startup_name }}."
     type: "CNAME"
  loop: "{{ dns_cname_records | dict2items }}"
  when: inventory_hostname in groups['dns_primaries']
  # no_log: true

# Set up prometheus exporter for bind
- name: Install Bind9 exporter
  apt:
    name: prometheus-bind-exporter
    state: present

- name: Ensure Bind9 exporter service is started and enabled
  systemd:
    name: prometheus-bind-exporter
    state: started
    enabled: yes
  notify: Restart Bind9 exporter
