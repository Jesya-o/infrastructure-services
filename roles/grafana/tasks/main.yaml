- name: Add Grafana APT GPG key
  ansible.builtin.apt_key:
    url: https://packages.grafana.com/gpg.key
    state: present

- name: Add Grafana APT repository
  ansible.builtin.apt_repository:
    repo: deb https://packages.grafana.com/oss/deb stable main
    state: present

- name: Install Grafana
  ansible.builtin.apt:
    name: grafana
    state: present

- name: check port
  ansible.builtin.debug:
    msg: 
      - "{{ hostvars[inventory_hostname].public_url }}"
      - "{{ hostvars[inventory_hostname].ansible_port | regex_search('^[0-9]{2}')  }}"

- name: Copy Grafana configuration
  template:
    src: grafana.ini.j2
    dest: /etc/grafana/grafana.ini
  notify: Restart Grafana

- name: Ensure Grafana service is started and enabled
  ansible.builtin.service:
    name: grafana-server
    state: started
    enabled: yes

# - name: Create Admin User
#   ansible.builtin.uri:
#     url: "http://{{ hostvars[inventory_hostname].public_url }}:{{ hostvars[inventory_hostname].ansible_port | regex_search('^[0-9]{2}')  }}80/grafana/api/admin/users"
#     method: POST
#     user: "admin"
#     password: "admin"
#     body: '{"login":"{{ grafana_user }}","password":"{{ grafana_pwd }}","name":"{{ grafana_user }}","email":"{{ email }}","isGrafanaAdmin":true}'
#     status_code: 200
#     body_format: json
#     validate_certs: no

# - name: Configure Prometheus Datasource
#   community.grafana.grafana_datasource:
#     name: Prometheus
#     access: proxy
#     ds_type: prometheus
#     ds_url: http://{{ vm_names[1] | lower }}:9090/prometheus
#     url: http://{{ vm_names[1] | lower }}:9090/prometheus

# - name: Create or update a Grafana user
#   community.grafana.grafana_user:
#     url: "{{ grafana_url }}"
#     url_username: admin
#     url_password: admin
#     name: "Ksenija Okuneva"
#     email: "{{ email }}"
#     # login: "{{ grafana_user }}"
#     # password: "{{ grafana_pwd }}"
#     login: Jesya
#     password: pwd
#     is_admin: true
#     state: present

# - name: Create Grafana API Key
#   uri:
#     url: "{{ grafana_url }}/api/auth/keys"
#     method: POST
#     # user: "{{ grafana_user }}"
#     # password: "{{ grafana_pwd }}"
#     user: Jesya
#     password: pwd
#     headers:
#       Content-Type: "application/json"
#     body: '{"name": "MyAPIKey", "role": "Admin"}'
#     body_format: json
#     status_code: 200
#   register: api_key_response

# - name: Print API Key
#   debug:
#     var: api_key_response.json

# - name: Create/Update Data sources
#   community.grafana.grafana_datasource:
#     dataSource: |
#       "{
#           'name': 'Prometheus',
#           'type': 'prometheus',
#           'access': 'proxy',
#           'url': 'http://{{ vm_names[1] | lower }}:9090',
#           'jsonData': {
#               'httpMethod': 'POST',
#               'manageAlerts': true,
#               'prometheusType': 'Prometheus',
#               'cacheLevel': 'High'
#           }
#       }"
#     grafana_url: "{{ grafana_url }}"
#     grafana_api_key: "{{ api_key_response.key }}"
#     state: present

# - name: Create Main Dashboard
#   uri:
#     url: http://{{ vm_names[1] | lower }}:3000/api/dashboards/db
#     method: POST
#     user: "{{ grafana_user }}"
#     password: "{{ grafana_pwd }}"
#     body: files/main.json
#   delegate_to: localhost


